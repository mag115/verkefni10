{"version":3,"file":"bundle.js","sources":["../src/lib/question.js","../src/lib/helpers.js","../src/lib/game.js","../src/lib/highscore.js","../src/index.js"],"sourcesContent":["/**\r\n * Úr sýnilausn fyrir verkefni 7.\r\n */\r\n\r\nconst operators = ['+', '-', '*', '/'];\r\n\r\n/**\r\n* Skilar tölu af handahófi á bilinu [min, max]\r\n*/\r\nfunction randomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n/**\r\n* Útbýr spurningu og skilar sem hlut:\r\n* { problem: strengur með spurningu, answer: svar við spurningu sem tala }\r\n*/\r\nexport default function question() {\r\n  const operator = operators[randomNumber(0, operators.length - 1)];\r\n\r\n  let a = null;\r\n  let b = null;\r\n  let answer = null;\r\n\r\n  switch (operator) {\r\n    case '+':\r\n      a = randomNumber(10, 100);\r\n      b = randomNumber(10, 100);\r\n      answer = a + b;\r\n      break;\r\n    case '-':\r\n      a = randomNumber(10, 100);\r\n      b = randomNumber(10, a);\r\n      answer = a - b;\r\n      break;\r\n    case '*':\r\n      a = randomNumber(1, 10);\r\n      b = randomNumber(1, 10);\r\n      answer = a * b;\r\n      break;\r\n    case '/':\r\n      b = randomNumber(2, 10);\r\n      a = randomNumber(2, 10) * b;\r\n      answer = a / b;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return {\r\n    problem: `${a} ${operator} ${b}`,\r\n    answer,\r\n  };\r\n}\r\n","\r\n/**\r\n * Hreinsa börn úr elementi\r\n *\r\n * @param {object} element Element sem á að hreinsa börn úr\r\n */\r\nexport function empty(element) {\r\n  while (element.firstChild) {\r\n    element.removeChild(element.firstChild);\r\n  }\r\n}\r\n\r\n/**\r\n * Búa til element og aukalega setja börn ef send með\r\n *\r\n * @param {string} name Nafn á element\r\n * @param  {...any} children Börn fyrir element\r\n */\r\nexport function el(name, ...children) {\r\n  const element = document.createElement(name);\r\n\r\n  if (Array.isArray(children)) {\r\n    children.forEach((child) => {\r\n      if (typeof child === 'string') {\r\n        element.appendChild(document.createTextNode(child));\r\n      } else if (child) {\r\n        element.appendChild(child);\r\n      }\r\n    });\r\n  }\r\n\r\n  return element;\r\n}\r\n","import question from './question';\r\nimport { empty, el } from './helpers';\r\n\r\n// allar breytur hér eru aðeins sýnilegar innan þessa módúl\r\n\r\nlet startButton = document.getElementByClassName(\"start\");\r\nstartButton.addEventListener(\"click\", start());\r\nlet problem; // element sem heldur utan um verkefni, sjá index.html\r\nlet result; // element sem heldur utan um niðurstöðu, sjá index.html\r\n\r\nlet playTime; // hversu lengi á að spila? Sent inn gegnum init()\r\nlet total = 0; // fjöldi spurninga í núverandi leik\r\nlet correct = 0; // fjöldi réttra svara í núverandi leik\r\nlet currentProblem; // spurning sem er verið að sýna\r\n\r\n/**\r\n * Klárar leik. Birtir result og felur problem. Reiknar stig og birtir í result.\r\n */\r\nfunction finish() {\r\n  const text = `Þú svaraðir ${correct} rétt af ${total} spurningum og fékkst ${points} stig fyrir. Skráðu þig á stigatöfluna!`;\r\n\r\n  // todo útfæra\r\n}\r\n\r\n/**\r\n * Keyrir áfram leikinn. Telur niður eftir því hve langur leikur er og þegar\r\n * tími er búinn kallar í finish().\r\n *\r\n * Í staðinn fyrir að nota setInterval köllum við í setTimeout á sekúndu fresti.\r\n * Þurfum þá ekki að halda utan um id á intervali og skilum falli sem lokar\r\n * yfir fjölda sekúnda sem eftir er.\r\n *\r\n * @param {number} current Sekúndur eftir\r\n */\r\nfunction tick(current) {\r\n  //setja klukku sem telur niður fra 10 sekúndum.\r\n\r\n  if (current <= 0) {\r\n    return finish();\r\n  }\r\n\r\n  return () => {\r\n    setTimeout(tick(current - 1), 1000);\r\n  };\r\n}\r\n\r\n/**\r\n * Býr til nýja spurningu og sýnir undir .problem__question\r\n */\r\nfunction showQuestion() {\r\n}\r\n\r\n/**\r\n * Byrjar leik\r\n *\r\n * - Felur startButton og sýnir problem\r\n * - Núllstillir total og correct\r\n * - Kallar í fyrsta sinn í tick()\r\n * - Sýnir fyrstu spurningu\r\n */\r\nfunction start() {\r\n  startButton = document.getElementByClassName(\"startButton\");\r\n}\r\n\r\n/**\r\n * Event handler fyrir það þegar spurningu er svarað. Athugar hvort svar sé\r\n * rétt, hreinsar input og birtir nýja spurningu.\r\n *\r\n * @param {object} e Event þegar spurningu svarað\r\n */\r\nfunction onSubmit(e) {\r\n  e.preventDefault();\r\n\r\n  // todo útfæra\r\n\r\n  showQuestion();\r\n}\r\n\r\n/**\r\n * Event handler fyrir þegar stig eru skráð eftir leik.\r\n *\r\n * @param {*} e Event þegar stig eru skráð\r\n */\r\nfunction onSubmitScore(e) {\r\n  e.preventDefault();\r\n\r\n  // todo útfæra\r\n\r\n  result.classList.add('result--hidden');\r\n  problem.classList.add('problem--hidden');\r\n  startButton.classList.remove('button--hidden');\r\n}\r\n\r\n/**\r\n * Finnur öll element DOM og setur upp event handlers.\r\n *\r\n * @param {number} _playTime Fjöldi sekúnda sem hver leikur er\r\n */\r\nexport default function init(_playTime) {\r\n  playTime = _playTime;\r\n  startButton = document.getElementByClassName(\"start\");\r\n  document.addEventListener(\"start\", start());\r\n  // todo útfæra\r\n}\r\n","// todo vísa í rétta hluti með import\r\n\r\n/**\r\n * Reikna út stig fyrir svör út frá heildarfjölda svarað á tíma.\r\n * Ekki þarf að gera ráð fyrir hversu lengi seinasta spurning var sýnd. Þ.e.a.s.\r\n * stig verða alltaf reiknuð fyrir n-1 af n spurningum.\r\n *\r\n * @param {number} total Heildarfjöldi spurninga\r\n * @param {number} correct Fjöldi svarað rétt\r\n * @param {number} time Tími sem spurningum var svarað á í sekúndum\r\n *\r\n * @returns {number} Stig fyrir svör\r\n */\r\nexport function score(total, correct, time) {\r\n  // todo útfæra\r\n}\r\n\r\n/**\r\n * Útbúa stigatöflu, sækir gögn í gegnum storage.js\r\n */\r\nexport default class Highscore {\r\n  constructor() {\r\n    this.scores = document.querySelector('.highscore__scores');\r\n    this.button = document.querySelector('.highscore__button');\r\n\r\n    this.button.addEventListener('click', this.clear.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Hlaða stigatöflu inn\r\n   */\r\n  load() {\r\n    // todo útfæra\r\n  }\r\n\r\n  /**\r\n   * Hreinsa allar færslur úr stigatöflu, tengt við takka .highscore__button\r\n   */\r\n  clear() {\r\n    // todo útfæra\r\n  }\r\n\r\n  /**\r\n   * Hlaða inn stigatöflu fyrir gefin gögn.\r\n   *\r\n   * @param {array} data Fylki af færslum í stigatöflu\r\n   */\r\n  highscore(data) {\r\n    // todo útfæra\r\n  }\r\n}\r\n","import initGame from './lib/game';\r\nimport Highscore from './lib/highscore';\r\n\r\nconst PLAY_TIME = 10;\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  initGame(PLAY_TIME);\r\n\r\n  const highscore = new Highscore();\r\n  highscore.load();\r\n});\r\n"],"names":["startButton","document","getElementByClassName","addEventListener","start","init","_playTime","playTime","Highscore","scores","querySelector","button","clear","bind","data","PLAY_TIME","initGame","highscore","load"],"mappings":";;;EAAA;;;;ECCA;;;;;;ECIA,IAAIA,WAAW,GAAGC,QAAQ,CAACC,qBAAT,CAA+B,OAA/B,CAAlB;EACAF,WAAW,CAACG,gBAAZ,CAA6B,OAA7B,EAAsCC,KAAK,EAA3C;AACA,EA6CA;;;;;;;;;;EAQA,SAASA,KAAT,GAAiB;EACfJ,EAAAA,WAAW,GAAGC,QAAQ,CAACC,qBAAT,CAA+B,aAA/B,CAAd;EACD;AAED,EA6BA;;;;;;;AAKA,EAAe,SAASG,IAAT,CAAcC,SAAd,EAAyB;AACtCC,EACAP,EAAAA,WAAW,GAAGC,QAAQ,CAACC,qBAAT,CAA+B,OAA/B,CAAd;EACAD,EAAAA,QAAQ,CAACE,gBAAT,CAA0B,OAA1B,EAAmCC,KAAK,EAAxC,EAHsC;EAKvC;;;;;;;;;;;;;;;;;;;;;;;;ECtFD;;;;MAGqBI;;;EACnB,uBAAc;EAAA;;EACZ,SAAKC,MAAL,GAAcR,QAAQ,CAACS,aAAT,CAAuB,oBAAvB,CAAd;EACA,SAAKC,MAAL,GAAcV,QAAQ,CAACS,aAAT,CAAuB,oBAAvB,CAAd;EAEA,SAAKC,MAAL,CAAYR,gBAAZ,CAA6B,OAA7B,EAAsC,KAAKS,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAtC;EACD;EAED;;;;;;;6BAGO;;EAIP;;;;;;8BAGQ;;EAIR;;;;;;;;gCAKUC,MAAM;EAEf;;;;;;EC9CH,IAAMC,SAAS,GAAG,EAAlB;EAEAd,QAAQ,CAACE,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;EAClDa,EAAAA,IAAQ,CAACD,SAAD,CAAR;EAEA,MAAME,SAAS,GAAG,IAAIT,SAAJ,EAAlB;EACAS,EAAAA,SAAS,CAACC,IAAV;EACD,CALD;;;;"}